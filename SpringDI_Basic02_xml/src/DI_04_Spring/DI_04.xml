<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                        http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 
	MessageBeanImpl messageBeanImpl = new MessageBeanImpl("hong"); //생성자 값 주입(String) 하단 xml
	messageBeanImpl.setGreeting("Hello"); //setter 함수를 통해서 값 주입(String)  > DI(의존성 주입)

	객체의 생성과 조립
	1. 생성자 주입
	2. setter 주입  >> property - setter 함수를 구현하고 있는 member field를 적으면 됨
 
    <bean id="식별자 이름" name="m1,m2 m3;m4"
    name 구분값 > ,   공백    ;  인정   > 별칭
 -->
	<bean id="messageBeanImpl"  name="m1,m2 m3;m4" class="DI_04_Spring.MessageBeanImpl">
	<!-- 
		<constructor-arg>
			<value>hong</value>
		</constructor-arg>
		
		property name="" 이름은 setGreeting  구현하고 있는  member field  명
	
		<property name="greeting">
			<value>hello</value>
		</property>
	 -->	
	 	<constructor-arg value="hong" />
	    <property name="greeting" value="world" />
	</bean>
</beans>


<!--
	// 암묵적으로 id는 소문자로 시작하는 클래스명을 사용한다. 
	// 만약 같은 객체에 id를 다르게 쓰면 새로운 객체로 생성된다. 
	<bean id = "messageBeanImpl" class ="DI_04_Spring.MessageBeanImpl">
	
		<constructor-arg>
			<value>hong</value>
		</constructor-arg>
		
		<property name = "greeting">
			<value>Hello</value>
		</property>
		
	</bean>
	
	// 위코드를 줄인다면
	<bean id = "messageBeanImpl" class ="DI_04_Spring.MessageBeanImpl">
	
		<constructor-arg value = "hong"/>
		<property name = "greeting" value = "Hello"/>
		
	</bean>

	
-->